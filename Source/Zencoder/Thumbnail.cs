using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Zencoder
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    /// <summary>
    /// Represents a thumbnail generated by zencoder encoding
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public class Thumbnail
    {
        /// <summary>
        /// Group Label (Important if you have several thumbnail groups)
        /// </summary>
        [JsonProperty("group_label")]
        public string GroupLabel { get; set; }

        /// <summary>
        /// Format of the thumbnail
        /// </summary>
        [JsonProperty("format")]
        public ThumbnailFormat? Format { get; set; }

        /// <summary>
        /// Date and time the thumbnail was created
        /// </summary>
        [JsonProperty("created_at")]
        [JsonConverter(typeof(IsoDateTimeConverter))]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Date and time the thumbnail was updated
        /// </summary>
        [JsonProperty("updated_at")]
        [JsonConverter(typeof(IsoDateTimeConverter))]
        public DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Url to retrieve the generated thumbnail
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }

        /// <summary>
        /// ID of the thumbnail
        /// </summary>
        [JsonProperty("id")]
        public long? Id { get; set; }

        /// <summary>
        /// Width of the thumbnail
        /// </summary>
        [JsonProperty("width")]
        public int? Width { get; set; }

        /// <summary>
        /// Height of the thumbnail
        /// </summary>
        [JsonProperty("height")]
        public int? Height { get; set; }

        /// <summary>
        /// Size of the thumbnail
        /// </summary>
        [JsonProperty("file_size_bytes")]
        public long? FileSize { get; set; }

    }
}
